//
//  FCPXML Media Multicam.swift
//  DAWFileKit • https://github.com/orchetect/DAWFileKit
//  © 2022 Steffan Andrews • Licensed under MIT License
//

#if os(macOS) // XMLNode only works on macOS

import Foundation
import TimecodeKit
import OTCore

extension FinalCutPro.FCPXML.Media.Multicam {
    /// A container of story elements organized sequentially in time.
    /// Similar to a `sequence`.
    public struct Angle: FCPXMLElement {
        public let element: XMLElement
        
        /// Angle name.
        public var name: String? {
            get { element.fcpName }
            set { element.fcpName = newValue }
        }
        
        /// Angle ID.
        public var angleID: String? {
            get { element.stringValue(forAttributeNamed: Attributes.angleID.rawValue) }
            set { element.addAttribute(withName: Attributes.angleID.rawValue, value: newValue) }
        }
        
        // Children
        
        /// Story elements contained within the angle.
        public var contents: LazyCompactMapSequence<[XMLNode], XMLElement> {
            element.childElements
        }
        
        public init(element: XMLElement) {
            self.element = element
        }
    }
}

extension FinalCutPro.FCPXML.Media.Multicam.Angle {
    public enum Attributes: String, XMLParsableAttributesKey {
        // Element-specific Attributes
        /// Angle name.
        case name
        
        /// Specifies the angle identifier.
        /// This is not the angle name, but a unique ID string randomly generated by FCP.
        case angleID
    }
    
    // contains clips
    // contains transitions
}

extension XMLElement { // Angle
    /// FCPXML: Returns the element wrapped in an ``FinalCutPro/FCPXML/Media/Multicam/Angle`` model object.
    /// Call this on a `mc-angle` element only.
    public var fcpAsMCAngle: FinalCutPro.FCPXML.Media.Multicam.Angle {
        .init(element: self)
    }
}

#endif
